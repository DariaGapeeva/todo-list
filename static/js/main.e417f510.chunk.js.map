{"version":3,"sources":["utilities/functions.js","API/api.js","redux/todoReduser.js","Components/Navbar/DayTodo/TodoItemWeek/TodoItemWeek.js","Components/Navbar/DayTodo/DayTodo.js","Components/Navbar/DayTodo/DayTodoContainer.js","Components/common/Loader.js","Components/Navbar/Navbar.js","Components/Navbar/NavbarContainer.js","Components/TodoItem/TodoItem.js","Components/common/form.js","Components/AddTodo/AddTodoForm.js","Components/Todo/Todo.js","Components/Todo/TodoContainer.js","App.js","serviceWorker.js","redux/store.js","index.js"],"names":["sortedDayOfWeek","array","arrayDayofWeek","map","day","sortedArray","filter","item","sort","a","b","index","instance","axios","create","baseURL","todoApi","get","response","Object","keys","data","key","id","newArray","console","error","task","done","post","delete","patch","initialState","todos","loading","loadingButton","setTodosAC","type","deleteTaskAC","addTaskAC","checkedAC","moveTaskInSameColumnAC","sourceIndex","destinationIndex","draggableId","moveTaskInOtherColumnAC","destinationId","Container","styled","div","props","isDragging","Number","span","Task","TodoItemWeek","provided","snapshot","draggableProps","dragHandleProps","ref","innerRef","idTaskInDay","TaskList","li","isDraggingOver","DayTodo","droppableId","droppableProps","length","indexOf","placeholder","connect","state","todoList","Ellipsis","Div","ellipsis1","keyframes","ellipsis2","ellipsis3","Div1","Div2","Div3","Div4","Loader","LinkElem","NavLink","Content","Item","Navbar","moveTaskInSameColumn","moveTaskInOtherColumn","onDragStart","onDragEnd","result","destination","source","log","to","dispatch","sourceItem","find","destinationItem","newArrayDay","newSourceIndex","newDestinationIndex","Promise","all","alert","message","moveTaskInSameColumnThunk","sourceId","arraySource","arrayDestination","moveTaskInOtherColumnThunk","setTodos","useEffect","Input","input","Button","button","TodoItem","number","checked","todo","onChange","onClick","deleteTask","Box","required","FormInput","label","register","name","StyledButton","AddTodoForm","useForm","defaultValues","something","handleSubmit","reset","isSubmitSuccessful","formState","React","useState","submittedData","onSubmit","addTask","autoFocus","List","TaskNo","Todo","indexNumber","addTaskThunk","deleteTodoThunk","checkedTodoThunk","Wrapper","ContentMain","ContentBottom","withRouter","exact","path","render","TodoContainer","Boolean","window","location","hostname","match","redusers","combineReducers","action","newState","newTask","filterNewState","currentIndex","splice","itemSource","store","createStore","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.e417f510.chunk.js","sourcesContent":["export const sortedDayOfWeek = (array) => {\n  const week = [\n    \"Понедельник\",\n    \"Вторник\",\n    \"Среда\",\n    \"Четверг\",\n    \"Пятница\",\n    \"Суббота\",\n    \"Воскресенье\",\n  ];\n\n  const arrayDayofWeek = week.map((day) => sortedArray(array, day));\n\n  let newArray = [\n    ...arrayDayofWeek[0],\n    ...arrayDayofWeek[1],\n    ...arrayDayofWeek[2],\n    ...arrayDayofWeek[3],\n    ...arrayDayofWeek[4],\n    ...arrayDayofWeek[5],\n    ...arrayDayofWeek[6],\n  ];\n  return newArray;\n};\n\nexport function sortedArray(array, day) {\n  return array\n    .filter((item) => item.day === day)\n    .sort((a, b) => (a.index > b.index ? 1 : -1));\n}\n","import axios from \"axios\";\nimport { sortedDayOfWeek } from \"../utilities/functions\";\n\nconst instance = axios.create({\n  baseURL: \"https://todo-list-e1cb3.firebaseio.com/\",\n});\n\nexport const todoApi = {\n  async getTodos() {\n    try {\n      const response = await instance.get(\"todos.json\");\n\n      const array = Object.keys(response.data).map((key) => ({\n        ...response.data[key],\n        id: key,\n      }));\n      const newArray = sortedDayOfWeek(array);\n      return newArray;\n    } catch (error) {\n      console.error(error);\n    }\n  },\n  addTodo(task, day, index, done) {\n    return instance.post(\"todos.json\", {\n      task: task,\n      day: day,\n      index: index,\n      done: done,\n    });\n  },\n  deleteTodo(id) {\n    return instance.delete(`todos/${id}.json`);\n  },\n  checkedTodo(id, done) {\n    return instance.patch(`todos/${id}.json`, {\n      done: done,\n    });\n  },\n  moveTodo(id, day) {\n    return instance.patch(`todos/${id}.json`, {\n      day: day,\n    });\n  },\n\n  reIndex(id, index) {\n    return instance.patch(`todos/${id}.json`, {\n      index: index,\n    });\n  },\n};\n","import { array } from \"prop-types\";\nimport { sortedArray } from \"../utilities/functions\";\nimport { todoApi } from \"./../API/api\";\n\nconst ADD_TASK = \"ADD_TASK\";\nconst DELETE_TASK = \"DELETE_TASK\";\nconst CHECKED = \"CHECKED\";\nconst MOVE_TASK_IN_SAME_COLUMN = \"MOVE_TASK_IN_SAME_COLUMN\";\nconst MOVE_TASK_IN_OTHER_COLUMN = \"MOVE_TASK_IN_OTHER_COLUMN\";\nconst SET_TODOS = \"SET_TODOS\";\nconst SHOW_LOADER = \"SHOW_LOADER\";\nconst HIDE_LOADER = \"HIDE_LOADER\";\nconst SHOW_LOADER_BUTTON = \"SHOW_LOADER_BUTTON\";\nconst HIDE_LOADER_BUTTON = \"HIDE_LOADER_BUTTON\";\n\nconst initialState = {\n  todos: [\n    //     {\n    //       id: \"1\",\n    //       day: \"Понедельник\",\n    //       task: \"Купить молоко\",\n    //       done: false,\n    //     },\n    //     {\n    //       id: \"2\",\n    //       day: \"Понедельник\",\n    //       task: \"Купить масло\",\n    //       done: false,\n    //     },\n    //     { id: \"3\", day: \"Понедельник\", task: \"Помыть пол\", done: false },\n    //     {\n    //       id: \"4\",\n    //       day: \"Вторник\",\n    //       task: \"Погулять в парке\",\n    //       done: false,\n    //     },\n    //     {\n    //       id: \"5\",\n    //       day: \"Вторник\",\n    //       task: \"Заплатить за телефон\",\n    //       done: false,\n    //     },\n    //     { id: \"6\", day: \"Вторник\", task: \"Помыть шкаф\", done: false },\n    //     { id: \"7\", day: \"Среда\", task: \"Решить задачу\", done: false },\n    //     { id: \"8\", day: \"Среда\", task: \"Йога\", done: false },\n    //     {\n    //       id: \"9\",\n    //       day: \"Четверг\",\n    //       task: \"Приготовить торт\",\n    //       done: false,\n    //     },\n    //     { id: \"10\", day: \"Четверг\", task: \"Сходить в МФЦ\", done: false },\n    //     {\n    //       id: \"11\",\n    //       day: \"Четверг\",\n    //       task: \"Постирать ковер\",\n    //       done: false,\n    //     },\n    //     {\n    //       id: \"12\",\n    //       day: \"Четверг\",\n    //       task: \"Купить тетради\",\n    //       done: false,\n    //     },\n    //     {\n    //       id: \"13\",\n    //       day: \"Пятница\",\n    //       task: \"Йога\",\n    //       done: false,\n    //     },\n    //     {\n    //       id: \"14\",\n    //       day: \"Суббота\",\n    //       task: \"Бассейн\",\n    //       done: false,\n    //     },\n    //     {\n    //       id: \"15\",\n    //       day: \"Воскресенье\",\n    //       task: \"Робототехника\",\n    //       done: false,\n    //     },\n    //     {\n    //       id: \"16\",\n    //       day: \"Воскресенье\",\n    //       task: \"Прогулка в лесу\",\n    //       done: false,\n    //     },\n  ],\n  loading: false,\n  loadingButton: false,\n};\n\nexport const todoReduser = (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_LOADER_BUTTON: {\n      return {\n        ...state,\n        loadingButton: true,\n      };\n    }\n    case HIDE_LOADER_BUTTON: {\n      return {\n        ...state,\n        loadingButton: false,\n      };\n    }\n\n    case SHOW_LOADER: {\n      return {\n        ...state,\n        loading: true,\n      };\n    }\n    case HIDE_LOADER: {\n      return {\n        ...state,\n        loading: false,\n      };\n    }\n    case SET_TODOS: {\n      const newState = {\n        ...state,\n        todos: action.todos,\n        loading: false,\n      };\n\n      return newState;\n    }\n    case ADD_TASK: {\n      let newTask = {\n        id: action.id,\n        day: action.day,\n        task: action.task,\n        done: action.done,\n        index: state.todos.filter((item) => item.day === action.day).length,\n      };\n      let filterNewState = state.todos.filter(\n        (item) => item.day === action.day\n      );\n      let currentIndex = state.todos.indexOf(\n        filterNewState[filterNewState.length - 1]\n      );\n\n      let newState = {\n        ...state,\n        todos: [...state.todos],\n      };\n\n      newState.todos.splice(currentIndex + 1, 0, newTask);\n      return newState;\n    }\n    case DELETE_TASK: {\n      return {\n        ...state,\n        todos: state.todos.filter((item) => item.id !== action.id),\n      };\n    }\n    case CHECKED: {\n      return {\n        ...state,\n        todos: state.todos.map((item) =>\n          item.id === action.id ? { ...item, done: !item.done } : item\n        ),\n      };\n    }\n    case MOVE_TASK_IN_SAME_COLUMN: {\n      let itemSource = state.todos.find(\n        (item) => item.id === action.draggableId\n      );\n\n      let newState = {\n        ...state,\n        todos: [...state.todos],\n      };\n\n      newState.todos.splice(action.sourceIndex, 1);\n      newState.todos.splice(action.destinationIndex, 0, itemSource);\n\n      return newState;\n    }\n    case MOVE_TASK_IN_OTHER_COLUMN: {\n      let itemSource = state.todos.find(\n        (item) => item.id === action.draggableId\n      );\n\n      let newState = {\n        ...state,\n        todos: [...state.todos],\n      };\n\n      newState.todos.splice(action.sourceIndex, 1);\n\n      let destinationIndex = action.destinationIndex;\n\n      if (action.sourceIndex < action.destinationIndex) {\n        destinationIndex = destinationIndex - 1;\n      }\n\n      newState.todos.splice(destinationIndex, 0, {\n        ...itemSource,\n        day: action.destinationId,\n      });\n\n      return newState;\n    }\n\n    default:\n      return state;\n  }\n};\n\nconst showLoader = () => ({ type: SHOW_LOADER });\nconst hideLoader = () => ({ type: HIDE_LOADER });\nconst showLoaderButton = () => ({ type: SHOW_LOADER_BUTTON });\nconst hideLoaderButton = () => ({ type: HIDE_LOADER_BUTTON });\n\nconst setTodosAC = (todos) => ({ type: SET_TODOS, todos });\n\nexport const deleteTaskAC = (id) => ({ type: DELETE_TASK, id });\n\nconst addTaskAC = (task, day, index, done, id) => ({\n  type: ADD_TASK,\n  task,\n  day,\n  index,\n  done,\n  id,\n});\nexport const checkedAC = (id) => ({ type: CHECKED, id });\nexport const moveTaskInSameColumnAC = (\n  sourceIndex,\n  destinationIndex,\n  draggableId\n) => ({\n  type: MOVE_TASK_IN_SAME_COLUMN,\n  sourceIndex,\n  destinationIndex,\n  draggableId,\n});\nexport const moveTaskInOtherColumnAC = (\n  sourceIndex,\n  destinationIndex,\n  destinationId,\n  draggableId\n) => ({\n  type: MOVE_TASK_IN_OTHER_COLUMN,\n  sourceIndex,\n  destinationIndex,\n  destinationId,\n  draggableId,\n});\n\nexport const addTaskThunk = (task, day, indexNumber, done) => {\n  return async (dispatch) => {\n    try {\n      dispatch(showLoaderButton());\n      const response = await todoApi.addTodo(task, day, indexNumber, done);\n\n      dispatch(hideLoaderButton());\n      dispatch(addTaskAC(task, day, indexNumber, done, response.data.name));\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n};\n\nexport const setTodosThunk = (todos) => {\n  return async (dispatch) => {\n    try {\n      dispatch(showLoader());\n      const response = await todoApi.getTodos();\n      dispatch(hideLoader());\n      dispatch(setTodosAC(response));\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n};\n\nexport const deleteTodoThunk = (id, day) => {\n  return async (dispatch) => {\n    try {\n      dispatch(showLoaderButton());\n      await todoApi.deleteTodo(id);\n      const response = await todoApi.getTodos();\n      await Promise.all([\n        ...response.map((item, index) => todoApi.reIndex(item.id, index)),\n      ]);\n      dispatch(hideLoaderButton());\n      dispatch(deleteTaskAC(id));\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n};\n\nexport const checkedTodoThunk = (id, done) => {\n  return async (dispatch) => {\n    try {\n      await todoApi.checkedTodo(id, done);\n      dispatch(checkedAC(id));\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n};\n\nexport const moveTaskInSameColumnThunk = (\n  sourceIndex,\n  destinationIndex,\n  day,\n  draggableId\n) => {\n  return async (dispatch) => {\n    try {\n      dispatch(showLoaderButton());\n      dispatch(\n        moveTaskInSameColumnAC(sourceIndex, destinationIndex, draggableId)\n      );\n      const response = await todoApi.getTodos();\n\n      const sourceItem = response.find((item) => item.id === draggableId);\n      const destinationItem = response[destinationIndex];\n\n      const newArrayDay = sortedArray(response, day);\n      //   response\n      //     .filter((item) => item.day === day)\n      //     .sort((a, b) => (a.index > b.index ? 1 : -1));\n\n      let newSourceIndex = newArrayDay.indexOf(sourceItem);\n      let newDestinationIndex = newArrayDay.indexOf(destinationItem);\n\n      console.log(\"newSourceIndex\", newSourceIndex);\n      console.log(\"newDestinationIndex\", newDestinationIndex);\n\n      await Promise.all([\n        ...newArrayDay.map((item, index) => {\n          if (newSourceIndex < index && index <= newDestinationIndex) {\n            todoApi.reIndex(item.id, index - 1);\n          }\n\n          if (newDestinationIndex <= index && index < newSourceIndex) {\n            todoApi.reIndex(item.id, index + 1);\n          }\n        }),\n      ]);\n      await todoApi.reIndex(draggableId, newDestinationIndex);\n\n      dispatch(hideLoaderButton());\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n};\n\nexport const moveTaskInOtherColumnThunk = (\n  sourceIndex,\n  sourceId,\n  destinationIndex,\n  destinationId,\n  draggableId\n) => {\n  return async (dispatch) => {\n    try {\n      dispatch(showLoaderButton());\n      dispatch(\n        moveTaskInOtherColumnAC(\n          sourceIndex,\n          destinationIndex,\n          destinationId,\n          draggableId\n        )\n      );\n      const response = await todoApi.getTodos();\n\n      console.log(array, \"array\");\n      const sourceItem = response.find((item) => item.id === draggableId);\n      const destinationItem = response[destinationIndex];\n\n      const arraySource = sortedArray(response, sourceId);\n      //   response\n      //     .filter((item) => item.day === sourceId)\n      //     .sort((a, b) => (a.index > b.index ? 1 : -1));\n\n      const arrayDestination = sortedArray(response, destinationId);\n      //   response\n      //     .filter((item) => item.day === destinationId)\n      //     .sort((a, b) => (a.index > b.index ? 1 : -1));\n\n      let newSourceIndex = arraySource.indexOf(sourceItem);\n      let newDestinationIndex =\n        arrayDestination.indexOf(destinationItem) !== -1\n          ? arrayDestination.indexOf(destinationItem)\n          : arrayDestination.length;\n\n      console.log(\"newSourceIndex\", newSourceIndex);\n      console.log(\"newDestinationIndex\", newDestinationIndex);\n\n      await Promise.all([\n        ...arraySource.map((item, index) => {\n          if (index > newSourceIndex) {\n            todoApi.reIndex(item.id, index - 1);\n          }\n        }),\n        ...arrayDestination.map((item, index) => {\n          if (index >= newDestinationIndex) {\n            todoApi.reIndex(item.id, index + 1);\n          }\n        }),\n        todoApi.moveTodo(draggableId, destinationId),\n        todoApi.reIndex(draggableId, newDestinationIndex),\n      ]);\n      //   }\n\n      dispatch(hideLoaderButton());\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n};\n","import React from \"react\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  border: 1px solid green;\n  padding: 3px;\n  margin-bottom: 8px;\n  border-radius: 5px;\n  outline: none;\n  background-color: ${(props) => (props.isDragging ? \"AliceBlue\" : \"lavender\")};\n`;\n\nconst Number = styled.span`\n  margin-right: 5px;\n`;\n\nconst Task = styled.span`\n  text-decoration: ${(props) => (props.done ? \"line-through\" : \"none\")};\n`;\n\nconst TodoItemWeek = (props) => {\n  return (\n    <Draggable draggableId={props.id} index={props.index} key={props.id}>\n      {(provided, snapshot) => (\n        <Container\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          ref={provided.innerRef}\n          isDragging={snapshot.isDragging}\n        >\n          <Number> {props.idTaskInDay}. </Number>\n          <Task done={props.done}> {props.task} </Task>\n        </Container>\n      )}\n    </Draggable>\n  );\n};\n\nexport default TodoItemWeek;\n","import React from \"react\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport TodoItemWeek from \"./TodoItemWeek/TodoItemWeek\";\n\nconst TaskList = styled.li`\n  list-style-type: none;\n  border: 1px solid green;\n  border-radius: 8px;\n  margin-bottom: 15px;\n  margin-top: 15px;\n  padding: 20px;\n  transition: background-color 0.2s ease;\n  background-color: ${(props) =>\n    props.isDraggingOver ? \"Gainsboro\" : \"lavender\"};\n`;\n\nconst DayTodo = (props) => {\n  let array = props.todos.filter((item) => item.day === props.day);\n\n  return (\n    <Droppable droppableId={props.day}>\n      {(provided, snapshot) => (\n        <TaskList\n          {...provided.droppableProps}\n          ref={provided.innerRef}\n          isDraggingOver={snapshot.isDraggingOver}\n        >\n          {array.length === 0\n            ? \"задач нет\"\n            : array.map((item, index) => (\n                <TodoItemWeek\n                  key={item.id}\n                  done={item.done}\n                  task={item.task}\n                  id={item.id}\n                  index={props.todos.indexOf(item)}\n                  idTaskInDay={index + 1}\n                />\n              ))}\n          {provided.placeholder}\n        </TaskList>\n      )}\n    </Droppable>\n  );\n};\n\nexport default DayTodo;\n","import DayTodo from \"./DayTodo\";\nimport { connect } from \"react-redux\";\nimport React from \"react\";\n\nconst DayTodoContainer = (props) => {\n  return (\n    <>\n      <DayTodo todos={props.todos} day={props.day} />\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    todos: state.todoList.todos,\n  };\n};\n\nexport default connect(mapStateToProps)(DayTodoContainer);\n","import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\nconst Ellipsis = styled.div`\n  isplay: inline-block;\n  position: relative;\n  width: 80px;\n  height: 80px;\n`;\nconst Div = styled.div`\n  position: absolute;\n  top: 33px;\n  width: 13px;\n  height: 13px;\n  border-radius: 50%;\n  background: silver;\n  animation-timing-function: cubic-bezier(0, 1, 1, 0);\n`;\nconst ellipsis1 = keyframes`\n0% {\n    transform: scale(0);\n  }\n  100% {\n    transform: scale(1);\n  }\n`;\nconst ellipsis2 = keyframes`\n0% {\n    transform: translate(0, 0);\n  }\n  100% {\n    transform: translate(24px, 0);\n  }\n`;\nconst ellipsis3 = keyframes`\n0% {\n    transform: scale(1);\n  }\n  100% {\n    transform: scale(0);\n  }\n`;\n\nconst Div1 = styled(Div)`\n  left: 8px;\n  animation: ${ellipsis1} 0.6s infinite;\n`;\nconst Div2 = styled(Div)`\n  left: 8px;\n  animation: ${ellipsis2} 0.6s infinite;\n`;\nconst Div3 = styled(Div)`\n  left: 32px;\n  animation: ${ellipsis2} 0.6s infinite;\n`;\nconst Div4 = styled(Div)`\n  left: 56px;\n  animation: ${ellipsis3} 0.6s infinite;\n`;\n\nconst Loader = () => {\n  return (\n    <Ellipsis>\n      <Div1></Div1>\n      <Div2></Div2>\n      <Div3></Div3>\n      <Div4></Div4>\n    </Ellipsis>\n  );\n};\n\nexport default Loader;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport DayTodoContainer from \"./DayTodo/DayTodoContainer\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport Loader from \"./../common/Loader\";\n\nconst LinkElem = styled(NavLink)`\n  text-decoration: none;\n  color: black;\n  font-weight: 600;\n  font-size: 1.3rem;\n  margin-bottom: 15px;\n  &:hover {\n    color: green;\n  }\n  &.active {\n    color: green;\n  }\n`;\n\nconst Content = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n`;\n\nconst Item = styled.div`\n  flex: 0 1 45%;\n`;\n\nconst Navbar = ({ moveTaskInSameColumn, moveTaskInOtherColumn, loading }) => {\n  const onDragStart = () => {};\n\n  const onDragEnd = (result) => {\n    const { draggableId, destination, source } = result;\n\n    console.log(\"result\", result);\n\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    if (destination.droppableId === source.droppableId) {\n      moveTaskInSameColumn(\n        source.index,\n        destination.index,\n        source.droppableId,\n        draggableId\n      );\n    } else if (destination.droppableId !== source.droppableId) {\n      moveTaskInOtherColumn(\n        source.index,\n        source.droppableId,\n        destination.index,\n        destination.droppableId,\n        draggableId\n      );\n    }\n  };\n\n  return (\n    <>\n      {!loading ? (\n        <DragDropContext onDragStart={onDragStart} onDragEnd={onDragEnd}>\n          <Content>\n            <Item>\n              <LinkElem to=\"/monday\"> Понедельник </LinkElem>\n              <DayTodoContainer day=\"Понедельник\" />\n            </Item>\n            <Item>\n              <LinkElem to=\"/tuesday\"> Вторник </LinkElem>\n              <DayTodoContainer day=\"Вторник\" />\n            </Item>\n            <Item>\n              <LinkElem to=\"/wednesday\"> Среда </LinkElem>\n              <DayTodoContainer day=\"Среда\" />\n            </Item>\n            <Item>\n              <LinkElem to=\"/thursday\"> Четверг </LinkElem>\n              <DayTodoContainer day=\"Четверг\" />\n            </Item>\n            <Item>\n              <LinkElem to=\"/friday\"> Пятница </LinkElem>\n              <DayTodoContainer day=\"Пятница\" />\n            </Item>\n            <Item>\n              <LinkElem to=\"/saturday\"> Суббота </LinkElem>\n              <DayTodoContainer day=\"Суббота\" />\n            </Item>\n            <Item>\n              <LinkElem to=\"/sunday\"> Воскресенье </LinkElem>\n              <DayTodoContainer day=\"Воскресенье\" />\n            </Item>\n          </Content>\n        </DragDropContext>\n      ) : (\n        <Loader />\n      )}\n    </>\n  );\n};\n\nexport default Navbar;\n","import { connect } from \"react-redux\";\nimport {\n  moveTaskInOtherColumnThunk,\n  setTodosThunk,\n  moveTaskInSameColumnThunk,\n} from \"../../redux/todoReduser\";\nimport React, { useEffect } from \"react\";\nimport Navbar from \"./Navbar\";\n\nconst NavbarContainer = (props) => {\n  useEffect(() => {\n    props.setTodos();\n  }, []);\n\n  return (\n    <>\n      <Navbar\n        moveTaskInSameColumn={props.moveTaskInSameColumn}\n        moveTaskInOtherColumn={props.moveTaskInOtherColumn}\n        loading={props.loading}\n      />\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  loading: state.todoList.loading,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    moveTaskInSameColumn: (sourceIndex, destinationIndex, day, draggableId) =>\n      dispatch(\n        moveTaskInSameColumnThunk(\n          sourceIndex,\n          destinationIndex,\n          day,\n          draggableId\n        )\n      ),\n    moveTaskInOtherColumn: (\n      sourceIndex,\n      sourceId,\n      destinationIndex,\n      destinationId,\n      draggableId\n    ) =>\n      dispatch(\n        moveTaskInOtherColumnThunk(\n          sourceIndex,\n          sourceId,\n          destinationIndex,\n          destinationId,\n          draggableId\n        )\n      ),\n    setTodos: () => dispatch(setTodosThunk()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavbarContainer);\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Task = styled.span`\n  text-decoration: ${(props) => (props.done ? \"line-through\" : \"none\")};\n`;\n\nconst Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border: 1px solid green;\n  border-radius: 5px;\n  padding: 15px;\n  margin-bottom: 10px;\n`;\n\nconst Number = styled.span`\n  margin-left: 5px;\n`;\n\nconst Input = styled.input`\n  margin-left: 10px;\n  margin-right: 10px;\n`;\n\nconst Button = styled.button`\n  border-radius: 5px;\n  background-color: lavender;\n`;\n\nconst TodoItem = (props) => {\n  return (\n    <Item>\n      <Number>\n        {\" \"}\n        {props.number}\n        <Input\n          type=\"checkbox\"\n          checked={props.todo.done}\n          onChange={() => props.checked(props.todo.id, !props.todo.done)}\n        />\n        <Task done={props.todo.done}> {props.todo.task}</Task>\n      </Number>\n      <Button onClick={() => props.deleteTask(props.todo.id, props.todo.day)}>\n        &times;\n      </Button>\n    </Item>\n  );\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Box = styled.div`\n\t\t\tposition: relative;\n\t\t\tborder:${props => (props.required ? '1px solid green' : '1px solid red')};\n\t\t\tborder-radius: 5px;\n\t\t\tpadding: 15px;\n\t\t\tmargin-bottom: 10px;\t\n\t`;\n\nconst FormInput = styled.input`\n\t\t\tborder: transparent;\n\t\t\tborder-radius: 5px;\n\t\t\theight: 20px;\n\t\t\twidth: 100%;\t\t\t\n\t\t\toutline: none;\n\t`;\n\nconst Input = ({ label, register, required, ...props }) => {\n\treturn (\n\t\t<Box required={required}>\n\t\t\t<FormInput name={label} ref={register({ required })} {...props} />\n\t\t</Box>\n\t)\n}\n\nexport default Input;","import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport styled from \"styled-components\";\nimport Input from \"../common/form\";\n\nconst StyledButton = styled.button`\n  border-radius: 5px;\n  background-color: lavender;\n`;\n\nconst AddTodoForm = (props) => {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { isSubmitSuccessful },\n  } = useForm({ defaultValues: { something: \"anything\" } });\n\n  const [submittedData] = React.useState({});\n\n  const onSubmit = (data) => {\n    props.addTask(data.task, props.day, props.index, false);\n  };\n  React.useEffect(() => {\n    if (isSubmitSuccessful) {\n      reset({ ...submittedData });\n    }\n  }, [isSubmitSuccessful, submittedData, reset]);\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <Input\n        register={register}\n        required\n        type=\"text\"\n        label=\"task\"\n        placeholder=\"Добавь задачу\"\n        autoFocus={true}\n      />\n      <StyledButton>Добавить</StyledButton>\n    </form>\n  );\n};\n\nexport default AddTodoForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TodoItem from \"../TodoItem/TodoItem\";\nimport AddTodoForm from \"../AddTodo/AddTodoForm\";\nimport styled from \"styled-components\";\nimport Loader from \"../common/Loader\";\n\nconst List = styled.div`\n  padding: 0;\n`;\n\nconst TaskNo = styled.div`\n  margin-bottom: 10px;\n`;\n\nconst Todo = (props) => {\n  let array = props.todos.filter((item) => item.day === props.day);\n  return (\n    <div>\n      <h3>{props.day} </h3>\n      {props.loadingButton && <Loader />}\n      <List>\n        {array.length === 0 ? (\n          <TaskNo>задач нет</TaskNo>\n        ) : (\n          array.map((item, index) => (\n            <TodoItem\n              key={item.id}\n              number={index + 1}\n              todo={item}\n              deleteTask={props.deleteTask}\n              checked={props.checked}\n            />\n          ))\n        )}\n      </List>\n\n      <AddTodoForm\n        addTask={props.addTask}\n        day={props.day}\n        index={array.length}\n      />\n    </div>\n  );\n};\n\nTodo.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default Todo;\n","import { connect } from \"react-redux\";\nimport Todo from \"./Todo\";\nimport {\n  addTaskThunk,\n  deleteTodoThunk,\n  checkedTodoThunk,\n} from \"../../redux/todoReduser\";\n\nconst mapStateToProps = (state) => {\n  return {\n    todos: state.todoList.todos,\n    loadingButton: state.todoList.loadingButton,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addTask: (task, day, index, done, array) =>\n      dispatch(addTaskThunk(task, day, index, done, array)),\n    deleteTask: (id, array) => dispatch(deleteTodoThunk(id, array)),\n    checked: (id, done) => dispatch(checkedTodoThunk(id, done)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Todo);\n","import React from \"react\";\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport NavbarContainer from \"./Components/Navbar/NavbarContainer\";\nimport TodoContainer from \"./Components/Todo/TodoContainer\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\nconst Content = styled.div`\n  flex: 1 1 30%;\n  max-width: 30%;\n  padding: 0px 20px;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ContentMain = styled.div`\n  flex: 1 0 auto;\n`;\nconst ContentBottom = styled.div`\n  flex: 0 0 auto;\n  margin-top: 10px;\n  margin-bottom: 20px;\n`;\n\nconst Navbar = styled.div`\n  flex: 1 1 60%;\n  max-width: 60%;\n  border: 1px solid green;\n  background-color: lavender;\n  padding: 15px;\n`;\n\nfunction App() {\n  return (\n    <Wrapper>\n      <Content>\n        <ContentMain>\n          <h1>Список дел</h1>\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={() => <TodoContainer day=\"Понедельник\" />}\n            />\n            <Route\n              path=\"/monday\"\n              render={() => <TodoContainer day=\"Понедельник\" />}\n            />\n            <Route\n              path=\"/tuesday\"\n              render={() => <TodoContainer day=\"Вторник\" />}\n            />\n            <Route\n              path=\"/wednesday\"\n              render={() => <TodoContainer day=\"Среда\" />}\n            />\n            <Route\n              path=\"/thursday\"\n              render={() => <TodoContainer day=\"Четверг\" />}\n            />\n            <Route\n              path=\"/friday\"\n              render={() => <TodoContainer day=\"Пятница\" />}\n            />\n            <Route\n              path=\"/saturday\"\n              render={() => <TodoContainer day=\"Суббота\" />}\n            />\n            <Route\n              path=\"/sunday\"\n              render={() => <TodoContainer day=\"Воскресенье\" />}\n            />\n          </Switch>\n        </ContentMain>\n        <ContentBottom> * Перетаскивай дела между днями недели </ContentBottom>\n      </Content>\n      <Navbar>\n        <NavbarContainer />\n      </Navbar>\n    </Wrapper>\n  );\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { todoReduser } from \"./todoReduser\";\n\nlet redusers = combineReducers({\n  todoList: todoReduser,\n});\n\nlet store = createStore(\n  redusers,\n  compose(\n    applyMiddleware(thunk),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nwindow.store = store;\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n// import { HashRouter } from \"react-router-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}